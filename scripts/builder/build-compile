#!/usr/bin/env build

echo "compiling: ${1}"

# Don't pass along the builder jobcontrol data to child processes
unset MAKEFLAGS

PATH="${TOOLDIR}/bin:${PATH}"
export PATH

ARCHIVE_TMP1=
ARCHIVE_TMP2=
cleanup()
{
	[ -f "${ARCHIVE_TMP1}" ] && rm -f "${ARCHIVE_TMP1}"
	[ -f "${ARCHIVE_TMP2}" ] && rm -f "${ARCHIVE_TMP2}"
	exit 0
}
trap cleanup EXIT
set -e

pkg_compile()
{
	# FIXME these defaults need moved elsewhere
	if [ -f "configure" ]; then
		./configure	--host="${CHOST}"			\
				--prefix="/usr" --mandir=/usr/share/man	\
				--docdir=/usr/share/doc			\
				--sysconfdir=/etc			\
				${CONFIG_OPTS}
	fi

	# FIXME we need a bunch of make options in here
	make ${MAKE_OPTS} && make DESTDIR="${D}" install
}

import "${1}"

# define the toolchain
if [ -z "${TOOLCHAIN}" ]; then
	if [ ! -z "${CHOST}" ]; then
		CROSS_COMPILE="${CHOST}-"
		export CROSS_COMPILE CHOST
	fi
	CC="${CROSS_COMPILE}gcc --sysroot=${SYSROOT}"
	CXX="${CROSS_COMPILE}g++ --sysroot=${SYSROOT}"
	LD="${CROSS_COMPILE}ld"
	AR="${CROSS_COMPILE}ar"
	STRIP="${CROSS_COMPILE}strip"
	RANDLIB="${CROSS_COMPILE}ranlib"
	export CC CXX LD AR STRIP RANLIB
fi

# pkgconfig can be a right pita...
PKG_CONFIG_LIBDIR="${SYSROOT}/usr/share/pkgconfig:${SYSROOT}/usr/lib/pkgconfig"
export PKG_CONFIG_LIBDIR PKG_CONFIG_PATH
export PKG_CONFIG_SYSROOT_DIR="${SYSROOT}"

[ -d "${S}" ] || mkdir -p "${S}"
[ -d "${L}" ] || mkdir -p "${L}"
[ -d "${E}" ] || mkdir -p "${E}"
if [ -d "${D}" ]; then
	rm -rf "${D}"
fi
mkdir -p "${D}"

if [ -f "${L}/compile.log" ]; then
	rm "${L}/compile.log" || exit 1
fi
set >> "${E}/compile.env"

cd "${S}"
pkg_compile >> "${L}/compile.log" 2>&1
cd "${W}"
rm -rf "${S}"

ARCHIVE_TMP1="$(mktemp "${BUILDER_TMPDIR}/${NAME}-${VERSION}.XXXXXXXX")"
ARCHIVE_TMP2="$(mktemp "${BUILDER_TMPDIR}/${NAME}-${VERSION}.XXXXXXXX")"

[ -f "${ARCHIVE_TMP1}" ] || die "failed to create temporary archive for package '${NAME}'"
[ -f "${ARCHIVE_TMP2}" ] || die "failed to create temporary archive for package '${NAME}'"

case "${ARCHIVE_FORMAT}" in
(tbz2|tar.bz2)	ARCHIVE_COMPRESSOR="bzip2 -cv";;
(tgz|tar.gz)	ARCHIVE_COMPRESSOR="gzip -cv";;
(*)		die "unsupported archive format '${ARCHIVE_FORMAT}'";;
esac

if [ ! -d "${BUILDER_ATFDIR}/${CATEGORY}" ]; then
	mkdir -p "${BUILDER_ATFDIR}/${CATEGORY}"
fi

cd "${D}"
tar -cvf "${ARCHIVE_TMP1}" .  > "${L}/archive.log" 2>&1
${ARCHIVE_COMPRESSOR} "${ARCHIVE_TMP1}" > "${ARCHIVE_TMP2}" 2>> "${L}/archive.log"
if [ -f "${BUILDER_ATFDIR}/${CATEGORY}/${NAME}-${VERSION}.${ARCHIVE_FORMAT}" ]; then
	rm -f "${BUILDER_ATFDIR}/${CATEGORY}/${NAME}-${VERSION}.${ARCHIVE_FORMAT}"
fi
mv -v "${ARCHIVE_TMP2}" "${BUILDER_ATFDIR}/${CATEGORY}/${NAME}-${VERSION}.${ARCHIVE_FORMAT}" >> "${L}/archive.log" 2>&1
cd "${W}"
rm -rf "${D}"

# vim: filetype=sh
